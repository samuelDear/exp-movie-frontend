{"version":3,"file":"static/js/280.528a2f70.chunk.js","mappings":"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","sources":["containers/login/Change.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Box, Typography, Button } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n\nimport { HeaderLogin, Layout, InputPassword } from 'components';\nimport { changeStyles } from 'styles';\nimport { MD5, API } from 'config';\n\nconst Change = () => {\n  // state\n  const [showPwd, setShowPwd] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // Styles\n  const styles = changeStyles;\n  const LoginBox = styled(Box)(({ theme }) => styles.loginBox(theme));\n  const ButtonLogin = styled(Button)(styles.loginButton);\n\n  // Otros\n  const [searchParams] = useSearchParams();\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const { control, handleSubmit } = useForm({\n    confirmPassword: '',\n    password: '',\n  });\n\n  const change = async values => {\n    try {\n      if (values.password !== values.confirmPassword) {\n        enqueueSnackbar('Contraseñas no coinciden', {\n          variant: 'error',\n        });\n\n        return;\n      }\n      // Armamos los parametros\n      const params = {\n        hash: searchParams.get('hash'),\n        pwd: MD5(values.password),\n      };\n\n      setLoading(true);\n\n      // Cambiamos\n      await API.change(params);\n\n      // Volvemos al inicio\n      navigate('/login');\n\n      setLoading(false);\n    } catch (e) {\n      const { status, data } = e;\n\n      switch (status) {\n        case 400:\n          enqueueSnackbar(data.msg, {\n            variant: 'error',\n          });\n          break;\n        case 401:\n          enqueueSnackbar('Hash incorrecto, intente nuevamente el proceso', {\n            variant: 'error',\n          });\n          break;\n        case 500:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n          break;\n        default:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Layout isLoading={loading}>\n      <HeaderLogin />\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={styles.mainBox}>\n        <LoginBox>\n          <Typography variant=\"h4\" body=\"h1\" sx={styles.titleLogin}>\n            Cambiar contraseña\n          </Typography>\n\n          <Typography variant=\"p2\" body=\"p\" sx={styles.messageLogin}>\n            Cambio de contraseña para el usuario {searchParams.get('email')}\n          </Typography>\n\n          <InputPassword\n            name=\"password\"\n            label=\"Contraseña:\"\n            placeholder=\"Contraseña\"\n            showPwd={showPwd}\n            setShowPwd={() => setShowPwd(prevState => !prevState)}\n            control={control}\n            classes={styles.inputForm}\n            fullWidth\n            validations={{\n              required: 'Campo requerido',\n              validate: {\n                noSpaces: value =>\n                  (value && /^\\S*$/.test(value)) || 'Contraseña inválida',\n              },\n            }}\n            variant=\"filled\"\n            replace={val => val.replace(/\\s/g, '')}\n          />\n\n          <InputPassword\n            name=\"confirmPassword\"\n            label=\"Confirmar Contraseña:\"\n            placeholder=\"ConfirmarContraseña\"\n            showPwd={showPwd}\n            setShowPwd={() => setShowPwd(prevState => !prevState)}\n            control={control}\n            classes={styles.inputForm}\n            fullWidth\n            validations={{\n              required: 'Campo requerido',\n              validate: {\n                noSpaces: value =>\n                  (value && /^\\S*$/.test(value)) || 'Contraseña inválida',\n              },\n            }}\n            variant=\"filled\"\n            replace={val => val.replace(/\\s/g, '')}\n          />\n\n          <ButtonLogin variant=\"primary\" onClick={handleSubmit(change)}>\n            Cambiar\n          </ButtonLogin>\n          <ButtonLogin variant=\"secondary\" onClick={() => navigate('/login')}>\n            Volver\n          </ButtonLogin>\n        </LoginBox>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Change;\n"],"names":["useState","showPwd","setShowPwd","loading","setLoading","styles","changeStyles","LoginBox","styled","Box","theme","loginBox","ButtonLogin","Button","loginButton","useSearchParams","searchParams","enqueueSnackbar","useSnackbar","navigate","useNavigate","useForm","confirmPassword","password","control","handleSubmit","change","values","variant","params","hash","get","pwd","MD5","API","status","data","msg","isLoading","display","justifyContent","alignItems","sx","mainBox","body","titleLogin","messageLogin","name","label","placeholder","prevState","classes","inputForm","fullWidth","validations","required","validate","noSpaces","value","test","replace","val","onClick"],"sourceRoot":""}