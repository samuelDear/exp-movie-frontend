{"version":3,"file":"static/js/267.2e9c96a4.chunk.js","mappings":"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","sources":["containers/login/Login.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Box, Typography, Button } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n\nimport { HeaderLogin, Layout, InputForm, InputPassword } from 'components';\nimport { loginStyles } from 'styles';\nimport { MD5, API } from 'config';\n\nconst Login = () => {\n  // state\n  const [showPwd, setShowPwd] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // Styles\n  const styles = loginStyles;\n  const LoginBox = styled('form')(({ theme }) => styles.loginBox(theme));\n  const ButtonLogin = styled(Button)(styles.loginButton);\n  const LinkForgott = styled(Link)(styles.forgotPwd);\n\n  // Otros\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const { control, handleSubmit, setError } = useForm({\n    email: '',\n    password: '',\n  });\n\n  const login = async values => {\n    try {\n      // Armamos los parametros\n      const params = {\n        usr: values.email,\n        pwd: MD5(values.password),\n      };\n\n      setLoading(true);\n\n      // Hacemos login\n      const response = await API.login(params);\n\n      // Si todo esta bien guardamos los datos\n      localStorage.setItem('user', JSON.stringify(response));\n      localStorage.setItem('sessionid', response.sessionid);\n\n      // Volvemos al inicio\n      navigate('/');\n\n      setLoading(false);\n    } catch (e) {\n      const { status, data } = e;\n\n      switch (status) {\n        case 400:\n          enqueueSnackbar(data.msg, {\n            variant: 'error',\n          });\n          break;\n        case 403:\n          enqueueSnackbar('Datos incorrectos o usuario no existe', {\n            variant: 'error',\n          });\n          break;\n        case 405:\n          setError('email', {\n            type: 'custom',\n            message: 'Formato de correo incorrecto',\n          });\n          break;\n        case 500:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n          break;\n        default:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Layout isLoading={loading}>\n      <HeaderLogin />\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={styles.mainBox}>\n        <LoginBox onSubmit={handleSubmit(login)}>\n          <Typography variant=\"h4\" body=\"h1\" sx={styles.titleLogin}>\n            Movie Login\n          </Typography>\n\n          <InputForm\n            name=\"email\"\n            label=\"Correo:\"\n            className={styles.inputForm}\n            control={control}\n            validations={{\n              required: 'Campo requerido',\n              validate: {\n                email: value =>\n                  (value && /\\S+@\\S+\\.\\S+/.test(value)) || 'Correo inválido',\n              },\n            }}\n            fullWidth\n            placeholder=\"Correo\"\n            inputProps={{\n              maxLength: 128,\n              inputMode: 'email',\n            }}\n            variant=\"filled\"\n            replace={val => val.replace(/\\s/g, '')}\n          />\n          <InputPassword\n            name=\"password\"\n            label=\"Contraseña:\"\n            placeholder=\"Contraseña\"\n            showPwd={showPwd}\n            setShowPwd={() => setShowPwd(prevState => !prevState)}\n            control={control}\n            classes={styles.inputForm}\n            fullWidth\n            validations={{\n              required: 'Campo requerido',\n              validate: {\n                noSpaces: value =>\n                  (value && /^\\S*$/.test(value)) || 'Contraseña inválida',\n              },\n            }}\n            variant=\"filled\"\n            replace={val => val.replace(/\\s/g, '')}\n          />\n\n          <ButtonLogin variant=\"primary\" type=\"submit\">\n            Iniciar sesión\n          </ButtonLogin>\n          <ButtonLogin\n            variant=\"secondary\"\n            onClick={() => navigate('/register')}>\n            Registrarse\n          </ButtonLogin>\n\n          <LinkForgott to=\"/forgot\">Olvide mi contraseña</LinkForgott>\n        </LoginBox>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Login;\n"],"names":["useState","showPwd","setShowPwd","loading","setLoading","styles","loginStyles","LoginBox","styled","theme","loginBox","ButtonLogin","Button","loginButton","LinkForgott","Link","forgotPwd","enqueueSnackbar","useSnackbar","navigate","useNavigate","useForm","email","password","control","handleSubmit","setError","login","values","params","usr","pwd","MD5","API","response","localStorage","setItem","JSON","stringify","sessionid","status","data","msg","variant","type","message","isLoading","display","justifyContent","alignItems","sx","mainBox","onSubmit","body","titleLogin","name","label","className","inputForm","validations","required","validate","value","test","fullWidth","placeholder","inputProps","maxLength","inputMode","replace","val","prevState","classes","noSpaces","onClick","to"],"sourceRoot":""}