{"version":3,"file":"static/js/851.e14d8de1.chunk.js","mappings":"qSA2IA,UAhIe,WAEb,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAASC,EAAAA,GACTC,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,OAAeL,EAAOM,SAASD,EAA/B,IACvBE,GAAcJ,EAAAA,EAAAA,GAAOK,EAAAA,EAAPL,CAAeH,EAAOS,aACpCC,GAAeP,EAAAA,EAAAA,GAAOK,EAAAA,EAAPL,EAAA,kBAChBH,EAAOS,aACPT,EAAOW,YAIJC,GAAoBC,EAAAA,EAAAA,MAApBD,gBACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA4CC,EAAAA,EAAAA,IAAQ,CAClDC,MAAO,KADDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,SAIzBC,EAAM,yCAAG,WAAMC,GAAN,gGAGLC,EAAS,CACbC,IAAKF,EAAOL,OAGdlB,GAAW,GAPA,SAUL0B,EAAAA,GAAAA,OAAWF,GAVN,OAaXX,EAAgB,oBAAD,OAAqBU,EAAOL,OAAS,CAClDS,QAAS,YAGXZ,EAAS,UAETf,GAAW,GAnBA,kDAqBH4B,EArBG,KAqBHA,OAAQC,EArBL,KAqBKA,KArBL,KAuBHD,EAvBG,OAwBJ,MAxBI,QA6BJ,MA7BI,QAkCJ,MAlCI,QAwCJ,MAxCI,gCAyBPf,EAAgBgB,EAAKC,IAAK,CACxBH,QAAS,UA1BJ,oCA8BPd,EAAgB,WAAD,OAAYU,EAAOL,MAAnB,cAAsC,CACnDS,QAAS,UA/BJ,oCAmCPN,EAAS,QAAS,CAChBU,KAAM,SACNC,QAAS,iCArCJ,oCAyCPnB,EAAgB,gBAAiB,CAC/Bc,QAAS,UA1CJ,6BA8CPd,EAAgB,gBAAiB,CAC/Bc,QAAS,UA/CJ,QAmDX3B,GAAW,GAnDA,0DAAH,sDAuDZ,OACE,UAAC,KAAD,CAAQiC,UAAWlC,EAAnB,WACE,SAAC,KAAD,KACA,SAAC,IAAD,CACEmC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,GAAIpC,EAAOqC,QAJb,UAKE,UAACnC,EAAD,YACE,SAAC,IAAD,CAAYwB,QAAQ,KAAKY,KAAK,KAAKF,GAAIpC,EAAOuC,WAA9C,sCAIA,SAAC,IAAD,CAAYb,QAAQ,KAAKY,KAAK,IAAIF,GAAIpC,EAAOwC,aAA7C,yJAKA,SAAC,KAAD,CACEC,KAAK,QACLC,MAAM,UACNC,UAAW3C,EAAO4C,UAClB1B,QAASA,EACT2B,YAAa,CACXC,SAAU,kBACVC,SAAU,CACR9B,MAAO,SAAA+B,GAAK,OACTA,GAAS,eAAeC,KAAKD,IAAW,oBAD/B,IAIhBE,WAAS,EACTC,YAAY,SACZC,WAAY,CACVC,UAAW,IACXC,UAAW,SAEb5B,QAAQ,SACR6B,QAAS,SAAAC,GAAG,OAAIA,EAAID,QAAQ,MAAO,GAAvB,KAGd,SAAC7C,EAAD,CAAcgB,QAAQ,UAAU+B,QAAStC,EAAaE,GAAtD,sBAIA,SAACd,EAAD,CAAamB,QAAQ,YAAY+B,QAAS,kBAAM3C,EAAS,SAAf,EAA1C,2BAOT,C","sources":["containers/login/Forgot.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Box, Typography, Button } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\n\nimport { HeaderLogin, Layout, InputForm } from 'components';\nimport { forgotStyles } from 'styles';\nimport { API } from 'config';\n\nconst Forgot = () => {\n  // state\n  const [loading, setLoading] = useState(false);\n\n  // Styles\n  const styles = forgotStyles;\n  const LoginBox = styled(Box)(({ theme }) => styles.loginBox(theme));\n  const ButtonLogin = styled(Button)(styles.loginButton);\n  const ButtonAccept = styled(Button)({\n    ...styles.loginButton,\n    ...styles.acceptBtn,\n  });\n\n  // Otros\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const { control, handleSubmit, setError } = useForm({\n    email: '',\n  });\n\n  const forgot = async values => {\n    try {\n      // Armamos los parametros\n      const params = {\n        usr: values.email,\n      };\n\n      setLoading(true);\n\n      // Hacemos login\n      await API.forgot(params);\n\n      // mensaje de exito\n      enqueueSnackbar(`Correo enviado a ${values.email}`, {\n        variant: 'success',\n      });\n\n      navigate('/login');\n\n      setLoading(false);\n    } catch (e) {\n      const { status, data } = e;\n\n      switch (status) {\n        case 400:\n          enqueueSnackbar(data.msg, {\n            variant: 'error',\n          });\n          break;\n        case 402:\n          enqueueSnackbar(`Usuario ${values.email} no existe`, {\n            variant: 'error',\n          });\n          break;\n        case 405:\n          setError('email', {\n            type: 'custom',\n            message: 'Formato de correo incorrecto',\n          });\n          break;\n        case 500:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n          break;\n        default:\n          enqueueSnackbar('Error Interno', {\n            variant: 'error',\n          });\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Layout isLoading={loading}>\n      <HeaderLogin />\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={styles.mainBox}>\n        <LoginBox>\n          <Typography variant=\"h4\" body=\"h1\" sx={styles.titleLogin}>\n            Recuperar contrase침a\n          </Typography>\n\n          <Typography variant=\"p2\" body=\"p\" sx={styles.messageLogin}>\n            En caso de que haya olvidado su contrase침a, ingrese su correo y le\n            llegara una notificacion con un enlace para cambiar la contrase침a\n          </Typography>\n\n          <InputForm\n            name=\"email\"\n            label=\"Correo:\"\n            className={styles.inputForm}\n            control={control}\n            validations={{\n              required: 'Campo requerido',\n              validate: {\n                email: value =>\n                  (value && /\\S+@\\S+\\.\\S+/.test(value)) || 'Correo inv치lido',\n              },\n            }}\n            fullWidth\n            placeholder=\"Correo\"\n            inputProps={{\n              maxLength: 128,\n              inputMode: 'email',\n            }}\n            variant=\"filled\"\n            replace={val => val.replace(/\\s/g, '')}\n          />\n\n          <ButtonAccept variant=\"primary\" onClick={handleSubmit(forgot)}>\n            Aceptar\n          </ButtonAccept>\n\n          <ButtonLogin variant=\"secondary\" onClick={() => navigate('/login')}>\n            Volver\n          </ButtonLogin>\n        </LoginBox>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Forgot;\n"],"names":["useState","loading","setLoading","styles","forgotStyles","LoginBox","styled","Box","theme","loginBox","ButtonLogin","Button","loginButton","ButtonAccept","acceptBtn","enqueueSnackbar","useSnackbar","navigate","useNavigate","useForm","email","control","handleSubmit","setError","forgot","values","params","usr","API","variant","status","data","msg","type","message","isLoading","display","justifyContent","alignItems","sx","mainBox","body","titleLogin","messageLogin","name","label","className","inputForm","validations","required","validate","value","test","fullWidth","placeholder","inputProps","maxLength","inputMode","replace","val","onClick"],"sourceRoot":""}